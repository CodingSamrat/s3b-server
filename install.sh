#!/bin/bash


# Extract version from package.json using jq
VERSION=$(jq -r '.version' ./package.json)


# Echo installation message
echo ""
echo "Installing s3b-server..."
echo "Version: $VERSION"
echo "----------------------------------"


# Ctreate new branch

# Check if the branch 'production' already exists
if ! git show-ref --quiet --verify -- "refs/heads/production"; then
    # If 'production' branch does not exist, create it
    echo ""
    echo "> Createing `production` branch..."
    git branch production
fi

# Check if current branch is not 'production'
if [[ $(git branch --show-current) != "production" ]]; then
    # If not on 'production', switch to it
    git checkout production
fi



echo ""
echo "> Installing dependencies..."
# Install npm packages globally and locally
sudo npm install -g .
npm install
sudo npm install -g pm2



# Create /volume directory and set permissions
VOLUME_DIR="/volume"
echo ""
echo "> Creating cloud directory $VOLUME_DIR..."

# Check if directory doesn't exist
if [ ! -d "$VOLUME_DIR" ]; then
    # Create the directory and set permissions
    sudo mkdir -p "$VOLUME_DIR"
fi

echo "> Changing owner of $VOLUME_DIR $(whoami):$(whoami)"
sudo chown -R $(whoami):$(whoami) "$VOLUME_DIR"

# Create .env file and add variables
echo "\
# Url of s3b server. Ex: https://cdn.your-domain.com
# HOST_URL will be used in s3b client to connect with server.
# Also all files will be delivered from HOST_URL.
# By default s3b-server run on prot 8800
HOST_URL=http://localhost:8800    # Replacec it


# Secret token used for authentication
# new key can be generated by running comand 's3b keygen'
ACCESS_TOKEN_SECRET=uDKseoo1/6xmHYYU/d5pBkcUofnYZVMPcReybIuoS5y147Z3MS
" > .env



# Make .env file secure
chmod 600 .env

node ./src/libs/create-admin-user.js


# Clean up install.sh if no longer needed
echo ""
echo "> Cleaning up project..."
rm install.sh
echo "> Done."